apiVersion: v1
kind: Service
metadata:
  name: details
  labels:
    app: details
    service: details
spec:
  ports:
  - port: 9080
    name: http
  selectors:
    app: details
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-details
  labels:
    account: details
---
appVersion: apps/v1
kind: Deployment
metadata:
  name: details-v1
  labels:
    app: details
    version: v1
spec:
  replicas: 1
  selectors:
    matchLabels:
      app: details
      version: v1
    template:
      metadata:
        labels:
          app: details
          version: v1
      spec:
        containers:
        - name: details
          image: docker.io/istio/examples-bookinfo-details-v1:1.15.0
          imagePullPolicy: IfNotPresent
          ports:
          - port: 9080
---   
apiVersion: v1
kind: Service
metadata:
  name: ratings
  labels:
    app: ratings
    service: ratings
spec:
  ports:
  - port: 9080
    name: http
  selectors:
    app: ratings
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-ratings
  labels:
    account: ratings
---     
appVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-v1
  labels:
    app: ratings
    version: v1
spec:
  replicas: 1
  selectors:
    matchLabels:
      app: ratings
      version: v1
    template:
      metadata:
        labels:
          app: ratings
          version: v1
      spec:
        serviceAccountName: bookinfo-ratings
        containers:
        - name: ratings
          image: docker.io/istio/examples-bookinfo-ratings-v1:1.15.0
          imagePullPolicy: IfNotPresent
          ports:
          - port: 9080
---
apiVersion: v1
kind: Service
metadata:
  name: reviews
  labels:
    app: reviews
    service: reviews
spec:
  ports:
  - port: 9080
    name: http
  selectors:
    app: reviews
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-reviews
  labels:
    account: reviews
---
appVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v1
  labels:
    app: reviews
    version: v1
spec:
  replicas: 1
  selectors:
    matchLabels:
      app: reviews
      version: v1
    template:
      metadata:
        labels:
          app: reviews
          version: v1
      spec:
        serviceAccountName: bookinfo-reviews
        containers:
        - name: reviews
          image: docker.io/istio/examples-bookinfo-reviews-v1:1.15.0
          imagePullPolicy: IfNotPresent
          env:
          - name: LOG_DIR
            value: "/tmp/logs"
          ports:
          - containerPort: 9080
          volumeMounts:
          - mountPath: "/opt/ibm/wlp/output"
            name: wlp-output
          - mountPath: "/tmp"
            name: tmp
        volumes:
        - name: wlp-output
          empty-dir: {}
        - name: tmp
          empty-dir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: productpage
  labels:
    app: productpage
    service: productpage
spec:
  ports:
  - port: 9080
    name: http
  selectors:
    app: productpage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-productpage
  labels:
    account: productpage
---
appVersion: apps/v1
kind: Deployment
metadata:
  name: productpage-v1
  labels:
    app: productpage
    version: v1
spec:
  replicas: 1
  selectors:
    matchLabels:
      app: productpage
      version: v1
    template:
      metadata:
        labels:
          app: productpage
          version: v1
      spec:
        serviceAccountName: bookinfo-productpage
        containers:
        - name: productpage
          image: docker.io/istio/examples-bookinfo-productpage-v1:1.15.0
          imagePullPolicy: IfNotPresent
          env:
          - name: LOG_DIR
            value: "/tmp/logs"
          ports:
          - containerPort: 9080
          volumeMounts:
          - mountPath: "/opt/ibm/wlp/output"
            name: wlp-output
          - mountPath: "/tmp"
            name: tmp
        volumes:
        - name: wlp-output
          empty-dir: {}
        - name: tmp
          empty-dir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  ports:
  - port: 27017
    name: mongo
  selectors:
    app: mongodb
---
appVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-v1
  labels:
    app: mongodb
    version: v1
spec:
  replicas: 1
  selectors:
    matchLabels:
      app: mongodb
      version: v1
    template:
      metadata:
        labels:
          app: mongodb
          version: v1
      spec:
        containers:
        - name: mongodb
          image: istio/examples-bookinfo-mongodb-v1:1.15.0
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 27017
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-credentials
type: Opaque
data:
  rootpasswd: cGFzc3dvcmQ=
---
apiVersion: v1
kind: Service
metadata:
  name: mysqldb
  labels:
    app: mysqldb
spec:
  ports:
  - port: 3306
    name: tcp
  selectors:
    app: mysqldb
---
appVersion: apps/v1
kind: Deployment
metadata:
  name: mysqldb-v1
  labels:
    app: mysqldb
    version: v1
spec:
  replicas: 1
  selectors:
    matchLabels:
      app: mysqldb
      version: v1
    template:
      metadata:
        labels:
          app: mysqldb
          version: v1
      spec:
        containers:
        - name: mysqldb
          image: docker.io/istio/examples-bookinfo-mysqldb-v1:1.15.0
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 27017
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-credentials
                key: rootpasswd
          args: ["--default-authentication-plugin","mysql_native_password"]
---
